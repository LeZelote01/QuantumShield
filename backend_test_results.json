{
  "summary": {
    "total_tests": 25,
    "passed_tests": 14,
    "failed_tests": 11,
    "success_rate": 56.00000000000001,
    "timestamp": "2025-07-19T10:17:43.794283"
  },
  "detailed_results": [
    {
      "test": "Global Health Check",
      "success": true,
      "details": "Services: 21/21 healthy. Services: ['ntru', 'blockchain', 'advanced_blockchain', 'advanced_crypto', 'security', 'ai_analytics', 'advanced_economy', 'iot_protocol', 'ota_update', 'geolocation', 'x509', 'marketplace', 'hsm', 'webhook', 'recommendations', 'custom_dashboards', 'cloud_integrations', 'erp_crm', 'compliance', 'api_gateway', 'database']",
      "timestamp": "2025-07-19T10:17:42.315542",
      "response_data": {
        "total": 21,
        "healthy": 21,
        "services": {
          "ntru": true,
          "blockchain": true,
          "advanced_blockchain": true,
          "advanced_crypto": true,
          "security": true,
          "ai_analytics": true,
          "advanced_economy": true,
          "iot_protocol": true,
          "ota_update": true,
          "geolocation": true,
          "x509": true,
          "marketplace": true,
          "hsm": true,
          "webhook": true,
          "recommendations": true,
          "custom_dashboards": true,
          "cloud_integrations": true,
          "erp_crm": true,
          "compliance": true,
          "api_gateway": true,
          "database": true
        }
      }
    },
    {
      "test": "User Registration",
      "success": true,
      "details": "User already exists, proceeding with login",
      "timestamp": "2025-07-19T10:17:42.360953",
      "response_data": null
    },
    {
      "test": "User Login",
      "success": true,
      "details": "Login successful, token received",
      "timestamp": "2025-07-19T10:17:42.639095",
      "response_data": null
    },
    {
      "test": "MFA Setup",
      "success": true,
      "details": "MFA setup successful, secret generated",
      "timestamp": "2025-07-19T10:17:42.712048",
      "response_data": null
    },
    {
      "test": "NTRU Key Generation",
      "success": false,
      "details": "HTTP 422: {\"detail\":[{\"type\":\"missing\",\"loc\":[\"body\"],\"msg\":\"Field required\",\"input\":null,\"url\":\"https://errors.pydantic.dev/2.11/v/missing\"}]}",
      "timestamp": "2025-07-19T10:17:42.757985",
      "response_data": null
    },
    {
      "test": "NTRU Encryption",
      "success": false,
      "details": "HTTP 422: {\"detail\":[{\"type\":\"missing\",\"loc\":[\"body\",\"data\"],\"msg\":\"Field required\",\"input\":{\"message\":\"Test quantum message for encryption\"},\"url\":\"https://errors.pydantic.dev/2.11/v/missing\"},{\"type\":\"missing\",\"loc\":[\"body\",\"public_key\"],\"msg\":\"Field required\",\"input\":{\"message\":\"Test quantum message for encryption\"},\"url\":\"https://errors.pydantic.dev/2.11/v/missing\"}]}",
      "timestamp": "2025-07-19T10:17:42.803993",
      "response_data": null
    },
    {
      "test": "Advanced Key Generation",
      "success": true,
      "details": "Kyber-768 keypair generated successfully",
      "timestamp": "2025-07-19T10:17:42.851983",
      "response_data": null
    },
    {
      "test": "Batch Encryption",
      "success": false,
      "details": "HTTP 422: {\"detail\":[{\"type\":\"missing\",\"loc\":[\"body\",\"keypair_id\"],\"msg\":\"Field required\",\"input\":{\"messages\":[\"Quantum message 1\",\"Quantum message 2\",\"Quantum message 3\"],\"algorithm\":\"kyber-768\"},\"url\":\"https://errors.pydantic.dev/2.11/v/missing\"}]}",
      "timestamp": "2025-07-19T10:17:42.897992",
      "response_data": null
    },
    {
      "test": "ZK-Proofs Generation",
      "success": false,
      "details": "HTTP 422: {\"detail\":[{\"type\":\"missing\",\"loc\":[\"body\",\"secret_value\"],\"msg\":\"Field required\",\"input\":{\"proof_type\":\"membership\",\"secret\":\"quantum_secret_2025\",\"public_parameters\":{\"modulus\":2048,\"generator\":2},\"statement\":\"I know the secret value\"},\"url\":\"https://errors.pydantic.dev/2.11/v/missing\"}]}",
      "timestamp": "2025-07-19T10:17:43.065966",
      "response_data": null
    },
    {
      "test": "Token Balance",
      "success": true,
      "details": "Balance retrieved: 0.0 QS",
      "timestamp": "2025-07-19T10:17:43.111937",
      "response_data": null
    },
    {
      "test": "Mining Stats",
      "success": true,
      "details": "Mining stats retrieved, difficulty: 0",
      "timestamp": "2025-07-19T10:17:43.159950",
      "response_data": null
    },
    {
      "test": "Device Registration",
      "success": false,
      "details": "HTTP 422: {\"detail\":[{\"type\":\"missing\",\"loc\":[\"body\",\"device_id\"],\"msg\":\"Field required\",\"input\":{\"name\":\"Quantum Sensor 2025\",\"device_type\":\"sensor\",\"location\":\"Quantum Lab\",\"protocol\":\"MQTT\"},\"url\":\"https://errors.pydantic.dev/2.11/v/missing\"},{\"type\":\"missing\",\"loc\":[\"body\",\"device_name\"],\"msg\":\"Field required\",\"input\":{\"name\":\"Quantum Sensor 2025\",\"device_type\":\"sensor\",\"location\":\"Quantum Lab\",\"protocol\":\"MQTT\"},\"url\":\"https://errors.pydantic.dev/2.11/v/missing\"}]}",
      "timestamp": "2025-07-19T10:17:43.205961",
      "response_data": null
    },
    {
      "test": "IoT Protocol Health",
      "success": true,
      "details": "Protocol health checked: 0 protocols",
      "timestamp": "2025-07-19T10:17:43.250012",
      "response_data": null
    },
    {
      "test": "Blockchain Overview",
      "success": true,
      "details": "Overview retrieved: 0 validators, 0 bridges",
      "timestamp": "2025-07-19T10:17:43.309050",
      "response_data": null
    },
    {
      "test": "Network Metrics",
      "success": true,
      "details": "Metrics retrieved: Hash rate None, Block time 300.0s",
      "timestamp": "2025-07-19T10:17:43.356987",
      "response_data": null
    },
    {
      "test": "Validators List",
      "success": false,
      "details": "Exception: 'list' object has no attribute 'get'",
      "timestamp": "2025-07-19T10:17:43.402991",
      "response_data": null
    },
    {
      "test": "Token Staking",
      "success": false,
      "details": "HTTP 400: {\"detail\":\"Erreur lors du staking: Erreur de validation: Montant minimum de stake: 1000.0\"}",
      "timestamp": "2025-07-19T10:17:43.448989",
      "response_data": null
    },
    {
      "test": "Security Dashboard",
      "success": true,
      "details": "Dashboard loaded: 0 threats, score 0",
      "timestamp": "2025-07-19T10:17:43.496968",
      "response_data": null
    },
    {
      "test": "Security Alerts",
      "success": false,
      "details": "HTTP 500: Internal Server Error",
      "timestamp": "2025-07-19T10:17:43.553947",
      "response_data": null
    },
    {
      "test": "Anomaly Detection",
      "success": true,
      "details": "Detection active: 0 anomalies, 0 models loaded",
      "timestamp": "2025-07-19T10:17:43.560423",
      "response_data": null
    },
    {
      "test": "AI Predictions",
      "success": true,
      "details": "Retrieved 2 predictions",
      "timestamp": "2025-07-19T10:17:43.606963",
      "response_data": null
    },
    {
      "test": "AI Dashboard",
      "success": true,
      "details": "Dashboard loaded: 0 active anomalies, status: None",
      "timestamp": "2025-07-19T10:17:43.654972",
      "response_data": null
    },
    {
      "test": "Smart Contract Templates",
      "success": false,
      "details": "HTTP 404: {\"detail\":\"Contrat templates non trouv\u00e9\"}",
      "timestamp": "2025-07-19T10:17:43.701002",
      "response_data": null
    },
    {
      "test": "Smart Contract Templates (Alias)",
      "success": false,
      "details": "Exception: 'list' object has no attribute 'get'",
      "timestamp": "2025-07-19T10:17:43.747000",
      "response_data": null
    },
    {
      "test": "Governance Proposals",
      "success": false,

      "details": "HTTP 400: {\"detail\":\"Erreur lors de la cr\u00e9ation de la proposition: Erreur de validation: 2 validation errors for Transaction\\ntransaction_type\\n  Input should be 'reward', 'detection', 'firmware_update' or 'device_registration' [type=enum, input_value='governance_proposal', input_type=str]\\n    For further information visit https://errors.pydantic.dev/2.11/v/enum\\nhash\\n  Field required [type=missing, input_value={'from_address': '0x266bc...': 'proposal_signature'}, input_type=dict]\\n    For further information visit https://errors.pydantic.dev/2.11/v/missing\"}",
      "timestamp": "2025-07-19T10:17:43.793941",
      "response_data": null
    }
  ]
}